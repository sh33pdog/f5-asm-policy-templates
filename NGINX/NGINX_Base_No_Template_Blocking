{
  "policy": {
    "adaptive-violation-rating": {
      "enabled": false,
      "inspectMinOriginalViolationRating": 3
    },
    "app-protection": {
      "enabled": true
    },
    "blocking-settings": {
      "evasions": [
        {
          "description": "Semicolon path parameters",
          "enabled": true
        },
        {
          "description": "Bad unescape",
          "enabled": true
        },
        {
          "description": "Apache whitespace",
          "enabled": true
        },
        {
          "description": "Bare byte decoding",
          "enabled": true
        },
        {
          "description": "IIS Unicode codepoints",
          "enabled": true
        },
        {
          "description": "IIS backslashes",
          "enabled": true
        },
        {
          "description": "%u decoding",
          "enabled": true
        },
        {
          "description": "Multiple decoding",
          "enabled": true,
          "maxDecodingPasses": 3
        },
        {
          "description": "Directory traversals",
          "enabled": true
        },
        {
          "description": "Multiple slashes",
          "enabled": true
        }
      ],
      "http-protocols": [
        {
          "description": "Unescaped space in URL",
          "enabled": true
        },
        {
          "description": "Multiple host headers",
          "enabled": true
        },
        {
          "description": "Check maximum number of headers",
          "enabled": true,
          "maxHeaders": 50
        },
        {
          "description": "Body in GET or HEAD requests",
          "enabled": true
        },
        {
          "description": "Chunked request with Content-Length header",
          "enabled": true
        },
        {
          "description": "Header name with no header value",
          "enabled": true
        },
        {
          "description": "POST request with Content-Length: 0",
          "enabled": true
        },
        {
          "description": "Check maximum number of parameters"
        },
        {
          "description": "High ASCII characters in headers"
        },
        {
          "description": "Null in request"
        },
        {
          "description": "Host header contains IP address"
        },
        {
          "description": "Bad multipart parameters parsing"
        },
        {
          "description": "Bad multipart/form-data request parsing"
        }
      ],
      "violations": [
        {
          "alarm": true,
          "block": true,
          "description": "Modified domain cookie(s)",
          "name": "VIOL_COOKIE_MODIFIED"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Request length exceeds defined buffer size",
          "name": "VIOL_REQUEST_MAX_LENGTH"
        },
        {
          "alarm": true,
          "block": true,
          "description": "CSRF attack detected",
          "name": "VIOL_CSRF"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Null in multi-part parameter value",
          "name": "VIOL_PARAMETER_MULTIPART_NULL_VALUE"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Failed to convert character",
          "name": "VIOL_ENCODING"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Illegal HTTP status in response",
          "name": "VIOL_HTTP_RESPONSE_STATUS"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Cookie not RFC-compliant",
          "name": "VIOL_COOKIE_MALFORMED"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Evasion technique detected",
          "name": "VIOL_EVASION"
        },
        {
          "alarm": true,
          "block": true,
          "description": "JSON data does not comply with format settings",
          "name": "VIOL_JSON_FORMAT"
        },
        {
          "alarm": true,
          "block": true,
          "description": "IP is blacklisted",
          "name": "VIOL_BLACKLISTED_IP"
        },
        {
          "alarm": true,
          "block": true,
          "description": "XML data does not comply with format settings",
          "name": "VIOL_XML_FORMAT"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Malformed JSON data",
          "name": "VIOL_JSON_MALFORMED"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Illegal Base64 value",
          "name": "VIOL_PARAMETER_VALUE_BASE64"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Modified ASM cookie",
          "name": "VIOL_ASM_COOKIE_MODIFIED"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Illegal method",
          "name": "VIOL_METHOD"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Threat Campaign detected",
          "name": "VIOL_THREAT_CAMPAIGN"
        },
        {
          "alarm": true,
          "block": true,
          "description": "HTTP protocol compliance failed",
          "name": "VIOL_HTTP_PROTOCOL"
        },
        {
          "alarm": true,
          "block": true,
          "description": "Malformed XML data",
          "name": "VIOL_XML_MALFORMED"
        },
        {
          "description": "Malformed gRPC data",
          "name": "VIOL_GRPC_MALFORMED"
        },
        {
          "description": "Illegal file type",
          "name": "VIOL_FILETYPE"
        },
        {
          "description": "Illegal meta character in value",
          "name": "VIOL_PARAMETER_VALUE_METACHAR"
        },
        {
          "description": "Illegal request content type",
          "name": "VIOL_URL_CONTENT_TYPE"
        },
        {
          "description": "Illegal cookie length",
          "name": "VIOL_COOKIE_LENGTH"
        },
        {
          "description": "Illegal parameter data type",
          "name": "VIOL_PARAMETER_DATA_TYPE"
        },
        {
          "description": "Parameter value does not comply with regular expression",
          "name": "VIOL_PARAMETER_VALUE_REGEXP"
        },
        {
          "description": "Illegal parameter array value",
          "name": "VIOL_PARAMETER_ARRAY_VALUE"
        },
        {
          "description": "Illegal POST data length",
          "name": "VIOL_POST_DATA_LENGTH"
        },
        {
          "description": "JSON data does not comply with JSON schema",
          "name": "VIOL_JSON_SCHEMA"
        },
        {
          "description": "Illegal parameter",
          "name": "VIOL_PARAMETER"
        },
        {
          "description": "Illegal meta character in header",
          "name": "VIOL_HEADER_METACHAR"
        },
        {
          "description": "Illegal parameter value length",
          "name": "VIOL_PARAMETER_VALUE_LENGTH"
        },
        {
          "description": "Illegal URL length",
          "name": "VIOL_URL_LENGTH"
        },
        {
          "description": "Disallowed file upload content detected",
          "name": "VIOL_FILE_UPLOAD"
        },
        {
          "description": "Illegal header length",
          "name": "VIOL_HEADER_LENGTH"
        },
        {
          "description": "Data Guard: Information leakage detected",
          "name": "VIOL_DATA_GUARD"
        },
        {
          "description": "Illegal query string length",
          "name": "VIOL_QUERY_STRING_LENGTH"
        },
        {
          "description": "Illegal parameter location",
          "name": "VIOL_PARAMETER_LOCATION"
        },
        {
          "description": "Mandatory parameter is missing",
          "name": "VIOL_MANDATORY_PARAMETER"
        },
        {
          "description": "Illegal parameter numeric value",
          "name": "VIOL_PARAMETER_NUMERIC_VALUE"
        },
        {
          "description": "Illegal meta character in parameter name",
          "name": "VIOL_PARAMETER_NAME_METACHAR"
        },
        {
          "description": "gRPC data does not comply with format settings",
          "name": "VIOL_GRPC_FORMAT"
        },
        {
          "description": "Disallowed file upload content detected in body",
          "name": "VIOL_FILE_UPLOAD_IN_BODY"
        },
        {
          "description": "Illegal repeated parameter name",
          "name": "VIOL_PARAMETER_REPEATED"
        },
        {
          "description": "Illegal URL",
          "name": "VIOL_URL"
        },
        {
          "description": "Illegal request length",
          "name": "VIOL_REQUEST_LENGTH"
        },
        {
          "description": "Illegal repeated header",
          "name": "VIOL_HEADER_REPEATED"
        },
        {
          "description": "Illegal static parameter value",
          "name": "VIOL_PARAMETER_STATIC_VALUE"
        },
        {
          "description": "Violation Rating Threat detected",
          "name": "VIOL_RATING_THREAT"
        },
        {
          "description": "Mandatory request body is missing",
          "name": "VIOL_MANDATORY_REQUEST_BODY"
        },
        {
          "description": "Illegal empty parameter value",
          "name": "VIOL_PARAMETER_EMPTY_VALUE"
        },
        {
          "description": "Illegal meta character in URL",
          "name": "VIOL_URL_METACHAR"
        },
        {
          "description": "Mandatory HTTP header is missing",
          "name": "VIOL_MANDATORY_HEADER"
        },
        {
          "description": "Illegal gRPC method",
          "name": "VIOL_GRPC_METHOD"
        }
      ]
    },
    "bot-defense": {
      "mitigations": {
        "classes": [
          {
            "action": "block",
            "name": "malicious-bot"
          },
          {
            "action": "alarm",
            "name": "suspicious-browser"
          },
          {
            "action": "alarm",
            "name": "untrusted-bot"
          },
          {
            "action": "detect",
            "name": "trusted-bot"
          },
          {
            "action": "detect",
            "name": "browser"
          },
          {
            "action": "alarm",
            "name": "unknown"
          }
        ]
      },
      "settings": {
        "caseSensitiveHttpHeaders": true,
        "isEnabled": true
      }
    },
    "caseInsensitive": false,
    "cookie-settings": {
      "maximumCookieHeaderLength": "4096"
    },
    "cookies": [
      {
        "accessibleOnlyThroughTheHttpProtocol": false,
        "attackSignaturesCheck": true,
        "decodeValueAsBase64": "enabled",
        "enforcementType": "allow",
        "insertSameSiteAttribute": "none",
        "maskValueInLogs": false,
        "name": "*",
        "securedOverHttpsConnection": false,
        "type": "wildcard",
        "wildcardOrder": 1
      }
    ],
    "csrf-protection": {
      "enabled": false
    },
    "csrf-urls": [
      {
        "enforcementAction": "verify-origin",
        "method": "POST",
        "url": "*",
        "wildcardOrder": 1
      }
    ],
    "data-guard": {
      "enabled": false,
      "enforcementMode": "ignore-urls-in-list"
    },
    "description": "Base Template for NGINX Standalone",
    "dos-protection": {
      "enabled": false
    },
    "enforcementMode": "transparent",
    "enforcer-settings": {
      "enforcerStateCookies": {
        "httpOnlyAttribute": true,
        "sameSiteAttribute": "strict",
        "secureAttribute": "always"
      }
    },
    "filetypes": [
      {
        "allowed": true,
        "checkPostDataLength": false,
        "checkQueryStringLength": true,
        "checkRequestLength": false,
        "checkUrlLength": true,
        "name": "*",
        "queryStringLength": 2048,
        "responseCheck": false,
        "type": "wildcard",
        "urlLength": 2048,
        "wildcardOrder": 0
      }
    ],
    "fullPath": "/Common/NGINX_BASE_TEMPLATE",
    "general": {
      "allowedResponseCodes": [
        400,
        401,
        404,
        407,
        417,
        503
      ],
      "maskCreditCardNumbersInRequest": true,
      "trustXff": false
    },
    "header-settings": {
      "maximumHttpHeaderLength": "4096"
    },
    "headers": [
      {
        "allowRepeatedOccurrences": false,
        "checkSignatures": true,
        "decodeValueAsBase64": "disabled",
        "htmlNormalization": false,
        "mandatory": false,
        "maskValueInLogs": false,
        "name": "transfer-encoding",
        "normalizationViolations": true,
        "percentDecoding": false,
        "type": "explicit",
        "urlNormalization": true
      },
      {
        "allowRepeatedOccurrences": true,
        "checkSignatures": true,
        "decodeValueAsBase64": "enabled",
        "htmlNormalization": false,
        "mandatory": false,
        "maskValueInLogs": false,
        "name": "referer",
        "normalizationViolations": true,
        "percentDecoding": false,
        "type": "explicit",
        "urlNormalization": true
      },
      {
        "allowRepeatedOccurrences": false,
        "checkSignatures": false,
        "mandatory": false,
        "maskValueInLogs": false,
        "name": "cookie",
        "type": "explicit"
      },
      {
        "allowRepeatedOccurrences": false,
        "checkSignatures": true,
        "decodeValueAsBase64": "disabled",
        "htmlNormalization": false,
        "mandatory": false,
        "maskValueInLogs": true,
        "name": "authorization",
        "normalizationViolations": false,
        "percentDecoding": true,
        "type": "explicit",
        "urlNormalization": false
      },
      {
        "allowRepeatedOccurrences": true,
        "checkSignatures": true,
        "decodeValueAsBase64": "required",
        "htmlNormalization": false,
        "mandatory": false,
        "maskValueInLogs": false,
        "name": "*-bin",
        "normalizationViolations": false,
        "percentDecoding": false,
        "type": "wildcard",
        "urlNormalization": false,
        "wildcardOrder": 1
      },
      {
        "allowRepeatedOccurrences": true,
        "checkSignatures": true,
        "decodeValueAsBase64": "enabled",
        "htmlNormalization": false,
        "mandatory": false,
        "maskValueInLogs": false,
        "name": "*",
        "normalizationViolations": false,
        "percentDecoding": true,
        "type": "wildcard",
        "urlNormalization": false,
        "wildcardOrder": 2
      }
    ],
    "methods": [
      {
        "name": "PATCH"
      },
      {
        "name": "PUT"
      },
      {
        "name": "POST"
      },
      {
        "name": "DELETE"
      },
      {
        "name": "OPTIONS"
      },
      {
        "name": "GET"
      },
      {
        "name": "HEAD"
      }
    ],
    "name": "NGINX_BASE_TEMPLATE",
    "parameters": [
      {
        "allowEmptyValue": true,
        "allowRepeatedParameterName": true,
        "attackSignaturesCheck": true,
        "checkMaxValueLength": false,
        "checkMetachars": true,
        "decodeValueAsBase64": "enabled",
        "isCookie": false,
        "isHeader": false,
        "level": "global",
        "metacharsOnParameterValueCheck": true,
        "name": "*",
        "parameterLocation": "any",
        "sensitiveParameter": false,
        "type": "wildcard",
        "valueType": "auto-detect",
        "wildcardOrder": 1
      }
    ],
    "response-pages": [
      {
        "grpcStatusCode": "UNKNOWN",
        "grpcStatusMessage": "The request was rejected. Please consult with your administrator. Your support ID is: <%TS.request.ID()%>",
        "responsePageType": "grpc"
      },
      {
        "ajaxActionType": "alert-popup",
        "ajaxEnabled": false,
        "ajaxPopupMessage": "The requested URL was rejected. Please consult with your administrator. Your support ID is: <%TS.request.ID()%>",
        "responsePageType": "ajax"
      },
      {
        "responseActionType": "soap-fault",
        "responsePageType": "xml"
      },
      {
        "responseActionType": "default",
        "responsePageType": "default"
      }
    ],
    "sensitive-parameters": [
      {
        "name": "password"
      }
    ],
    "signature-sets": [
      {
        "alarm": true,
        "block": true,
        "name": "XML External Entities (XXE) Signatures",
        "signatureSet": {
          "filter": {
            "accuracyFilter": "all",
            "accuracyValue": "all",
            "attackType": {
              "name": "XML External Entities (XXE)"
            },
            "hasCve": "all",
            "lastUpdatedFilter": "all",
            "riskFilter": "all",
            "riskValue": "all",
            "signatureType": "request",
            "tagFilter": "all",
            "userDefinedFilter": "all"
          },
          "name": "XML External Entities (XXE) Signatures",
          "type": "filter-based"
        }
      },
      {
        "alarm": true,
        "block": true,
        "name": "CVE Signatures",
        "signatureSet": {
          "filter": {
            "accuracyFilter": "all",
            "accuracyValue": "all",
            "hasCve": "yes",
            "lastUpdatedFilter": "all",
            "riskFilter": "all",
            "riskValue": "all",
            "signatureType": "request",
            "tagFilter": "all",
            "userDefinedFilter": "all"
          },
          "name": "CVE Signatures",
          "type": "filter-based"
        }
      },
      {
        "alarm": true,
        "block": true,
        "name": "Vulnerability Scan Signatures",
        "signatureSet": {
          "filter": {
            "accuracyFilter": "all",
            "accuracyValue": "all",
            "attackType": {
              "name": "Vulnerability Scan"
            },
            "hasCve": "all",
            "lastUpdatedFilter": "all",
            "riskFilter": "all",
            "riskValue": "all",
            "signatureType": "request",
            "tagFilter": "all",
            "userDefinedFilter": "all"
          },
          "name": "Vulnerability Scan Signatures",
          "type": "filter-based"
        }
      },
      {
        "alarm": true,
        "block": true,
        "name": "Denial of Service Signatures",
        "signatureSet": {
          "filter": {
            "accuracyFilter": "all",
            "accuracyValue": "all",
            "attackType": {
              "name": "Denial of Service"
            },
            "hasCve": "all",
            "lastUpdatedFilter": "all",
            "riskFilter": "all",
            "riskValue": "all",
            "signatureType": "request",
            "tagFilter": "all",
            "userDefinedFilter": "all"
          },
          "name": "Denial of Service Signatures",
          "type": "filter-based"
        }
      },
      {
        "alarm": true,
        "block": true,
        "name": "Buffer Overflow Signatures",
        "signatureSet": {
          "filter": {
            "accuracyFilter": "all",
            "accuracyValue": "all",
            "attackType": {
              "name": "Buffer Overflow"
            },
            "hasCve": "all",
            "lastUpdatedFilter": "all",
            "riskFilter": "all",
            "riskValue": "all",
            "signatureType": "request",
            "tagFilter": "all",
            "userDefinedFilter": "all"
          },
          "name": "Buffer Overflow Signatures",
          "type": "filter-based"
        }
      },
      {
        "alarm": true,
        "block": true,
        "name": "Authentication/Authorization Attack Signatures",
        "signatureSet": {
          "filter": {
            "accuracyFilter": "all",
            "accuracyValue": "all",
            "attackType": {
              "name": "Authentication/Authorization Attacks"
            },
            "hasCve": "all",
            "lastUpdatedFilter": "all",
            "riskFilter": "all",
            "riskValue": "all",
            "signatureType": "request",
            "tagFilter": "all",
            "userDefinedFilter": "all"
          },
          "name": "Authentication/Authorization Attack Signatures",
          "type": "filter-based"
        }
      },
      {
        "alarm": true,
        "block": true,
        "name": "High Accuracy Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "SQL Injection Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "Cross Site Scripting Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "OS Command Injection Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "Path Traversal Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "XPath Injection Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "Command Execution Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "Server Side Code Injection Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "Information Leakage Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "Directory Indexing Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "Remote File Include Signatures"
      },
      {
        "alarm": true,
        "block": true,
        "name": "Predictable Resource Location Signatures"
      },
      {
        "name": "Medium Accuracy Signatures",
        "block": true,
        "alarm": true
      }
    ],
    "signature-settings": {
      "minimumAccuracyForAutoAddedSignatures": "medium"
    },
    "template": {
      "name": "POLICY_TEMPLATE_NGINX_BASE"
    },
    "urls": [
      {
        "attackSignaturesCheck": true,
        "clickjackingProtection": false,
        "disallowFileUploadOfExecutables": false,
        "html5CrossOriginRequestsEnforcement": {
          "enforcementMode": "disabled"
        },
        "isAllowed": true,
        "mandatoryBody": false,
        "metacharsOnUrlCheck": true,
        "method": "*",
        "methodsOverrideOnUrlCheck": false,
        "name": "*",
        "protocol": "http",
        "type": "wildcard",
        "urlContentProfiles": [
          {
            "headerName": "*",
            "headerOrder": "default",
            "headerValue": "*",
            "type": "apply-value-and-content-signatures"
          },
          {
            "headerName": "Content-Type",
            "headerOrder": "1",
            "headerValue": "*form*",
            "type": "form-data"
          },
          {
            "contentProfile": {
              "name": "Default"
            },
            "headerName": "Content-Type",
            "headerOrder": "2",
            "headerValue": "*json*",
            "type": "json"
          },
          {
            "contentProfile": {
              "name": "Default"
            },
            "headerName": "Content-Type",
            "headerOrder": "3",
            "headerValue": "*xml*",
            "type": "xml"
          }
        ],
        "wildcardOrder": 2
      },
      {
        "name": "*",
        "wildcardOrder": 1,
        "protocol": "https",
        "method": "*"
      }
    ],
    "xml-profiles": [
      {
        "attackSignaturesCheck": true,
        "defenseAttributes": {
          "allowCDATA": true,
          "allowDTDs": true,
          "allowExternalReferences": true,
          "allowProcessingInstructions": true,
          "maximumAttributeValueLength": "any",
          "maximumAttributesPerElement": 32,
          "maximumChildrenPerElement": 4096,
          "maximumDocumentDepth": 32,
          "maximumDocumentSize": 1024000,
          "maximumElements": 512000,
          "maximumNSDeclarations": 64,
          "maximumNameLength": "any",
          "maximumNamespaceLength": "any",
          "tolerateCloseTagShorthand": true,
          "tolerateLeadingWhiteSpace": true,
          "tolerateNumericNames": true
        },
        "description": "Default XML Profile",
        "name": "Default",
        "useXmlResponsePage": false
      }
    ],
    "applicationLanguage": "utf-8"
  }
}
